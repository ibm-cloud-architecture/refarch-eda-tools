#############################################################################
#
# Licensed Materials - Property of IBM
#
# "Restricted Materials of IBM" 
#
# (C) COPYRIGHT IBM Corp. 1993, 2019 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
#############################################################################

#
# NAME:     db2cshrc
#
# FUNCTION: This script sets up a default database environment for
#           C shell users.
#
# USAGE:    source db2cshrc
#           This script can either be invoked directly as above or
#           it can be added to the user's .cshrc file so that the
#           database environment is established during login.
#
#           #### DO NOT EDIT THIS FILE ####
#
#############################################################################

setenv DB2DIR /opt/ibm/db2/V11.5

# Remember the current DB2INSTANCE environment variable
if ( ${?DB2INSTANCE} != 0 ) then
    set CUR_INSTNAME=${DB2INSTANCE}
endif

#-----------------------------------------------------------------------
# DB2INSTANCE [Default null, values: Any valid instance name]
# Specifies the instance that is active by default.
#-----------------------------------------------------------------------
setenv DB2INSTANCE db2inst1
setenv INSTHOME /database/config/db2inst1

#----------------------------------------------------------------------
#For non-root NFS Mount feature
#DB2LOCAL [local machines sqllib]
#----------------------------------------------------------------------
if ( -f ${INSTHOME}/sqllib/.mount ) then 
   setenv DB2LOCAL ${INSTHOME}/sqllib

   set TMP_DB2MOUNT=`cat ${INSTHOME}/sqllib/.mount`
   setenv DB2MOUNT "${TMP_DB2MOUNT}"
endif
    
#------------------------------------------------------------------
# For scripting language drivers
#------------------------------------------------------------------
if ( ${?DB2_NET_CLIENT_PATH} != 0 ) then
   setenv INST_DIR `echo ${DB2_NET_CLIENT_PATH} | sed 's/\/$//'`

   # Find the location do current 'sqllib' directory
   which db2 >& /dev/null
   if ( $status == 0 ) then
      set PREV_DB2_PATH=`which db2`
      set NO_DB2=`echo $PREV_DB2_PATH | grep "no db2"`
      if ( ${?PREV_DB2_PATH} != 0 && ${?NO_DB2} == 0 ) then
         set PREV_BIN_PATH=`dirname ${PREV_DB2_PATH}`
         set CUR_INSTHOME=`dirname ${PREV_BIN_PATH}`
      endif
   endif
else
   setenv INST_DIR ${INSTHOME}/sqllib
endif

setenv IBM_DB_DIR ${INST_DIR}
setenv IBM_DB_LIB ${INST_DIR}/lib
setenv IBM_DB_HOME ${INST_DIR}
setenv IBM_DB_INCLUDE ${INST_DIR}/include
setenv DB2_HOME ${INST_DIR}
setenv DB2LIB ${INST_DIR}/lib

#----------------------------------------------------------------------------
# If DB2 instance environment is being switched from one instances to another, 
# the entries for old DB2 instance in the original instance enviornment
# are cleaned up.
#----------------------------------------------------------------------------
if ( ${?CUR_INSTNAME} != 0) then
     if ( ${?CUR_INSTHOME} == 0 ) then
       set CUR_INSTHOME=`${INST_DIR}/bin/db2usrinf -d ${CUR_INSTNAME}`
       set CUR_INSTHOME="$CUR_INSTHOME/sqllib"
     endif

     set path_list=(bin adm misc db2tss/bin)
     set class_list=(java/db2java.zip java/db2jcc4.jar java/sqlj4.zip function \
       java/db2jcc_license_cisuz.jar java/db2jcc_license_cu.jar java/runtime.zip \
       tools/clpplus.jar tools/antlr-3.2.jar tools/jline-0.9.93.jar )

     set TEMPOPATH=""
     foreach dirname ( ${path} )
       set found=0
       foreach tmp_entry ( ${path_list} )
         if ( "X${dirname}" =~  "X${CUR_INSTHOME}/${tmp_entry}" ) then
            set found=1
            break
         endif
       end
       if ( ${found} != 1) then
           set TEMPOPATH=( "${TEMPOPATH}${dirname} " )
       endif
     end
     set path=( ${TEMPOPATH} )

     if ( ${?CLASSPATH} != 0 ) then
        set TMP_CLASSPATH="${CLASSPATH}";
        foreach tmp_entry ( ${class_list} )
           set VAR="${CUR_INSTHOME}/${tmp_entry}"
           set VAR2="${INST_DIR}/${tmp_entry}"
           set TMP_CLASSPATH=`echo ${TMP_CLASSPATH} | awk  '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"; else print VAR2":"}' FS=":" VAR=${VAR} VAR2=${VAR2}`
           set TMP_CLASSPATH=`echo ${TMP_CLASSPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
        end
        setenv  CLASSPATH "${TMP_CLASSPATH}"
     endif

     set liblist=(lib lib32 lib64)
     foreach tmp_path ( ${liblist} )
        if ( ${?LD_LIBRARY_PATH} != 0) then
            set TMP_LIBPATH="${LD_LIBRARY_PATH}"
            set VAR="${CUR_INSTHOME}/${tmp_path}"
            set VAR2="${INST_DIR}/${tmp_path}"
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"; else print VAR2":"}' FS=":" VAR=${VAR} VAR2=${VAR2}`
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
            setenv LD_LIBRARY_PATH "${TMP_LIBPATH}"
        endif
        if ( ${?LIBPATH} != 0) then
            set TMP_LIBPATH="${LIBPATH}"
            set VAR="${CUR_INSTHOME}/${tmp_path}"
            set VAR2="${INST_DIR}/${tmp_path}"
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"; else print VAR2":"}' FS=":" VAR=${VAR} VAR2=${VAR2}`
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
            setenv LIBPATH "${TMP_LIBPATH}"
        endif
        if ( ${?SHLIB_PATH} != 0) then
            set TMP_LIBPATH="${SHLIB_PATH}"
            set VAR="${CUR_INSTHOME}/${tmp_path}"
            set VAR2="${INST_DIR}/${tmp_path}"
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"; else print VAR2":"}' FS=":" VAR=${VAR} VAR2=${VAR2}`
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
            setenv SHLIB_PATH "${TMP_LIBPATH}"
        endif
        if ( ${?LD_LIBRARY_PATH_32} != 0) then
            set TMP_LIBPATH="${LD_LIBRARY_PATH_32}"
            set VAR="${CUR_INSTHOME}/${tmp_path}"
            set VAR2="${INST_DIR}/${tmp_path}"
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"; else print VAR2":"}' FS=":" VAR=${VAR} VAR2=${VAR2}`
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
            setenv LD_LIBRARY_PATH_32 "${TMP_LIBPATH}"
        endif
        if ( ${?LD_LIBRARY_PATH_64} != 0) then
            set TMP_LIBPATH="${LD_LIBRARY_PATH_64}"
            set VAR="${CUR_INSTHOME}/${tmp_path}"
            set VAR2="${INST_DIR}/${tmp_path}"
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"; else print VAR2":"}' FS=":" VAR=${VAR} VAR2=${VAR2}`
            set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
            setenv LD_LIBRARY_PATH_64 "${TMP_LIBPATH}"
        endif
     end
     if ( ${?LD_LIBRARYN32_PATH} != 0) then
        set TMP_LIBPATH="${LD_LIBRARYN32_PATH}"
        set VAR="${CUR_INSTHOME}/lib32"
        set VAR2="${INST_DIR}/lib32"
        set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk  '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"; else print VAR2":"}' FS=":" VAR=${VAR} VAR2=${VAR2}`
        set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed  's/\: /\:/g' | sed 's/\:$//g'`
        setenv LD_LIBRARYN32_PATH "${TMP_LIBPATH}"
     endif
endif

if ( ${?DASWORKDIR} != 0 ) then
  set path_list=(bin adm)
  foreach tmp_path ( ${path_list} )
      if ( ${?PATH} != 0) then
         set TMP_LIBPATH="${PATH}"
         set VAR="${DASWORKDIR}/${tmp_path}"
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"}' FS=":" VAR=${VAR}`
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
         setenv PATH "${TMP_LIBPATH}"
      endif
  end

  set lib_list=(lib function)
  foreach tmp_path ( ${lib_list} )
      if ( ${?LD_LIBRARY_PATH} != 0) then
         set TMP_LIBPATH="${LD_LIBRARY_PATH}"
         set VAR="${DASWORKDIR}/${tmp_path}"
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"}' FS=":" VAR=${VAR}`
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
         setenv LD_LIBRARY_PATH "${TMP_LIBPATH}"
      endif
      if ( ${?LIBPATH} != 0) then
         set TMP_LIBPATH="${LIBPATH}"
         set VAR="${DASWORKDIR}/${tmp_path}"
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"}' FS=":" VAR=${VAR}`
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
         setenv LIBPATH "${TMP_LIBPATH}"
      endif
      if ( ${?SHLIB_PATH} != 0) then
         set TMP_LIBPATH="${LIBPATH}"
         set VAR="${DASWORKDIR}/${tmp_path}"
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | awk '{for (i=1; i<= NF; ++i) if( $i != VAR ) print $i":"}' FS=":" VAR=${VAR}`
         set TMP_LIBPATH=`echo ${TMP_LIBPATH} | sed 's/\: /\:/g' | sed 's/\:$//g'`
         setenv SHLIB_PATH "${TMP_LIBPATH}"
      endif
  end
endif

if ( ${?CUR_INSTNAME} != 0 ) then
  set path =( `echo $path | sed s/"${CUR_INSTNAME}"/"${DB2INSTANCE}"/g` )
endif

unset CUR_INSTNAME path_list class_list TEMPOPATH found tmp_entry TMP_LIBPATH VAR VAR2 TMP_CLASSPATH liblist tmp_path

if ("$path" !~ *${INST_DIR}/bin*) set path=( $path ${INST_DIR}/bin )
if ("$path" !~ *${INST_DIR}/adm*) set path=( $path ${INST_DIR}/adm )
if ("$path" !~ *${INST_DIR}/misc*) set path=( $path ${INST_DIR}/misc )
if ("$path" !~ *${INST_DIR}/gskit/bin*) set path=( $path ${INST_DIR}/gskit/bin )
if ("$path" !~ *${INST_DIR}/db2tss/bin*) set path=( $path ${INST_DIR}/db2tss/bin )

#-----------------------------------------------------------------------
# UDB Extender initialization
#-----------------------------------------------------------------------
if ( -f ${INSTHOME}/dmb/dmbcshrc ) source ${INSTHOME}/dmb/dmbcshrc

#-----------------------------------------------------------------------
# The following variables are used for JDBC support
#-----------------------------------------------------------------------
if ( ${?CLASSPATH} == 0 ) setenv CLASSPATH ""
if ("$CLASSPATH" !~ *.*) setenv CLASSPATH ".:$CLASSPATH"
if ( -e ${INST_DIR}/function )         if ("$CLASSPATH" !~ *${INST_DIR}/function*)         setenv CLASSPATH "${INST_DIR}/function:$CLASSPATH"
if ( -e ${INST_DIR}/java/sqlj4.zip )    if ("$CLASSPATH" !~ *${INST_DIR}/java/sqlj4.zip*)    setenv CLASSPATH "${INST_DIR}/java/sqlj4.zip:$CLASSPATH"
if ( -e ${INST_DIR}/java/db2jcc4.jar )  if ("$CLASSPATH" !~ *${INST_DIR}/java/db2jcc4.jar*)  setenv CLASSPATH "${INST_DIR}/java/db2jcc4.jar:$CLASSPATH"
if ( -e ${INST_DIR}/java/db2java.zip ) if ("$CLASSPATH" !~ *${INST_DIR}/java/db2java.zip*) setenv CLASSPATH "${INST_DIR}/java/db2java.zip:$CLASSPATH"
if ( -e ${INST_DIR}/java/db2jcc_license_cisuz.jar )  if ("$CLASSPATH" !~ *${INST_DIR}/java/db2jcc_license_cisuz.jar*)  setenv CLASSPATH "${INST_DIR}/java/db2jcc_license_cisuz.jar:$CLASSPATH"
if ( -e ${INST_DIR}/java/db2jcc_license_cu.jar )  if ("$CLASSPATH" !~ *${INST_DIR}/java/db2jcc_license_cu.jar*)  setenv CLASSPATH "${INST_DIR}/java/db2jcc_license_cu.jar:$CLASSPATH"

#-----------------------------------------------------------------------
# The following variables are used for CLPPlus
#-----------------------------------------------------------------------

if ( -e ${INST_DIR}/tools/clpplus.jar )        if ("$CLASSPATH" !~ *${INST_DIR}/tools/clpplus.jar*)       setenv CLASSPATH "${INST_DIR}/tools/clpplus.jar:$CLASSPATH"
if ( -e ${INST_DIR}/tools/antlr-3.2.jar )      if ("$CLASSPATH" !~ *${INST_DIR}/tools/antlr-3.2.jar*)     setenv CLASSPATH "${INST_DIR}/tools/antlr-3.2.jar:$CLASSPATH"
if ( -e ${INST_DIR}/tools/jline-0.9.93.jar )   if ("$CLASSPATH" !~ *${INST_DIR}/tools/jline-0.9.93.jar*)  setenv CLASSPATH "${INST_DIR}/tools/jline-0.9.93.jar:$CLASSPATH"
if ( -e ${INST_DIR}/java/db2jcc4.jar )          if ("$CLASSPATH" !~ *${INST_DIR}/java/db2jcc4.jar*) setenv CLASSPATH "${INST_DIR}/java/db2jcc4.jar:$CLASSPATH"
if ( -e ${INST_DIR}/java/db2jcc_license_cisuz.jar )    if ("$CLASSPATH" !~ *${INST_DIR}/java/db2jcc_license_cisuz.jar*)      setenv CLASSPATH "${INST_DIR}/java/db2jcc_license_cisuz.jar:$CLASSPATH"

if ( ${?LD_LIBRARY_PATH} == 0 ) setenv LD_LIBRARY_PATH ""
if ("$LD_LIBRARY_PATH" !~ *${INST_DIR}/lib64*) setenv LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:${INST_DIR}/lib64"
if ("$LD_LIBRARY_PATH" !~ *${INST_DIR}/lib32*) setenv LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:${INST_DIR}/lib32"
if ("$LD_LIBRARY_PATH" !~ *${INST_DIR}/lib64/gskit*) setenv LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:${INST_DIR}/lib64/gskit"

#---------------------------------------------------------------------------
# Any user changes to the environment goes into usercshrc.  Modifications
# to db2cshrc may be overwritten in fixpaks.
#---------------------------------------------------------------------------
if ( -f ${INST_DIR}/usercshrc ) source ${INST_DIR}/usercshrc

