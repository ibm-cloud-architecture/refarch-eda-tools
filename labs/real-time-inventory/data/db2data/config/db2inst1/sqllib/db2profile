#############################################################################
#
# Licensed Materials - Property of IBM
#
# "Restricted Materials of IBM" 
#
# (C) COPYRIGHT IBM Corp. 1993, 2019 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
#############################################################################

#
# NAME:     db2profile
#
# FUNCTION: This script sets up a default database environment for
#           Bourne shell or Korn shell users.
#
# USAGE:    . db2profile
#           This script can either be invoked directly as above or
#           it can be added to the user's .profile file so that the
#           database environment is established during login.
#
#           #### DO NOT EDIT THIS FILE ####
#
#############################################################################

DB2DIR=/opt/ibm/db2/V11.5

# Remember the current DB2INSTANCE environment variable
CUR_INSTNAME=${DB2INSTANCE:=""}

#-----------------------------------------------------------------------
# DB2INSTANCE [Default null, values: Any valid instance name]
# Specifies the instance that is active by default.
#-----------------------------------------------------------------------
DB2INSTANCE=db2inst1
export DB2INSTANCE
INSTHOME=/database/config/db2inst1

#----------------------------------------------------------------------
#For non-root NFS Mount feature 
#DB2LOCAL [local machines sqllib]
#----------------------------------------------------------------------

if [ -f ${INSTHOME?}/sqllib/.mount ]; then
   DB2LOCAL=${INSTHOME?}/sqllib
   export DB2LOCAL
   
   DB2MOUNT=`cat ${INSTHOME?}/sqllib/.mount`
   export DB2MOUNT 
fi
     
#------------------------------------------------------------------
# For scripting language drivers
#------------------------------------------------------------------
DB2_NET_CLIENT_PATH=${DB2_NET_CLIENT_PATH:=""}
if [ "X${DB2_NET_CLIENT_PATH}" != "X" ] ; then
   INST_DIR=`echo ${DB2_NET_CLIENT_PATH} | sed 's/\/$//'`

   # Find the location of current 'sqllib' directory
   PREV_DB2_PATH=`which db2 2>/dev/null`
   if [ "X${PREV_DB2_PATH}" != "X" ]; then
      PREV_BIN_PATH=`dirname ${PREV_DB2_PATH} 2>/dev/null`
      if [ "X${PREV_BIN_PATH}" != "X" ]; then 
        CUR_INSTHOME=`dirname ${PREV_BIN_PATH}`
      fi
   fi
else
   INST_DIR=${INSTHOME?}/sqllib
fi

CUR_INSTHOME=${CUR_INSTHOME:=""}
IBM_DB_DIR=${INST_DIR?}
IBM_DB_LIB=${INST_DIR?}/lib
IBM_DB_INCLUDE=${INST_DIR?}/include
DB2_HOME=${INST_DIR?}
DB2LIB=${INST_DIR?}/lib
IBM_DB_HOME=${INST_DIR?}

export IBM_DB_DIR
export IBM_DB_LIB
export IBM_DB_HOME
export IBM_DB_INCLUDE
export DB2_HOME
export DB2LIB

# Function to add or remove certain path to or from the specified
# environment variable.

AddRemoveString()
{
    if [ $# -ne 3 ]; then
       return 0
    fi
    var=$1        #The enviornment variable to be processed
    addrm_str=$2  #The new path to be used
    action=$3     #Action: a -> add, r -> remove
    if [ "X${action?}" != "Xa" -a "X${action?}" != "Xr" ]; then
        return 0  # return without doing anything
    fi
    awkval='$1 != "'${addrm_str?}'"{print $0}'
    newval=`eval echo \\${$var:-""} | awk '{for (i=1; i<= NF; ++i) \
          if( $i != VAR && length($i) > 0 ) print $i":"}' FS=":" VAR=${addrm_str?} | \
          tr -d '\n'`
    if [ "X${action?}" = "Xa" ]; then
        newval=${newval?}"${addrm_str?}"
    else
        newval=`echo ${newval?} | sed 's/:$//'`
    fi
    eval $var=\"${newval?}\"
    unset var addrm_str awkval newval
}

#----------------------------------------------------------------------------
# If DB2 instance environment is being switched from one instances to another,
# the entries for old DB2 instance in the original instance enviornment
# are cleaned up.
#----------------------------------------------------------------------------
if [ -n "${CUR_INSTNAME?}" ]; then 
       CUR_INSTHOME=`${INST_DIR}/bin/db2usrinf -d ${CUR_INSTNAME?}`
       CUR_INSTHOME="${CUR_INSTHOME}/sqllib"

     path_list="bin adm misc db2tss/bin" 
     class_list="java/db2java.zip java/db2jcc4.jar java/sqlj4.zip function \
       java/db2jcc_license_cisuz.jar java/db2jcc_license_cu.jar \
       java/runtime.zip tools/clpplus.jar tools/antlr-3.2.jar tools/jline-0.9.93.jar"

     for tmp_entry in ${path_list?}; do
        AddRemoveString PATH ${CUR_INSTHOME?}/${tmp_entry?} r
     done
     for tmp_entry in ${class_list?}; do
        AddRemoveString CLASSPATH ${CUR_INSTHOME?}/${tmp_entry?} r
     done

     for path_name in LD_LIBRARY_PATH LIBPATH SHLIB_PATH LD_LIBRARY_PATH_32 \
        LD_LIBRARY_PATH_64; do
        for tmp_path in lib lib32 lib64; do
           AddRemoveString ${path_name?} ${CUR_INSTHOME?}/${tmp_path?} r
        done
     done

     for path_name in PATH CLASSPATH LD_LIBRARY_PATH LIBPATH SHLIB_PATH \
        LD_LIBRARY_PATH_32 LD_LIBRARY_PATH_64; do
        eval path_value=\$$path_name
        if [ "X${path_value}" = "X" ]; then
           unset ${path_name?}
        else
           export ${path_name?}
        fi
     done
     unset CUR_INSTNAME path_list class_list tmp_entry path_name path_value
fi

#-----------------------------------------------------------------------------
# In DB2 instance environment, the DAS environment needs to be cleaned up.
#-----------------------------------------------------------------------------
DASWORKDIR=${DASWORKDIR:=""}
if [ "X${DASWORKDIR}" != "X" ]; then
  AddRemoveString PATH ${DASWORKDIR?}/bin r
  AddRemoveString PATH ${DASWORKDIR?}/adm r
  for path_name in LIBPATH SHLIB_PATH LD_LIBRARY_PATH; do
      for tmp_path in lib function; do
          AddRemoveString ${path_name?} ${DASWORKDIR?}/${tmp_path?} r
      done
  done 
  for path_name in PATH LIBPATH SHLIB_PATH LD_LIBRARY_PATH; do
        if [ "X${path_name}" = "X" ]; then
           unset ${path_name?}
        else
           export ${path_name?}
        fi
  done
fi
#-----------------------------------------------------------------------------

for tmp_path in bin adm misc; do
   AddRemoveString PATH ${INST_DIR}/${tmp_path?} a
done
AddRemoveString PATH ${INST_DIR}/gskit/bin a
if [ -d ${INST_DIR}/db2tss/bin ]; then
   AddRemoveString PATH ${INST_DIR}/db2tss/bin a
fi
export PATH
unset tmp_path

#-----------------------------------------------------------------------
# UDB Extender initialization
#-----------------------------------------------------------------------
if [ -f ${INSTHOME}/dmb/dmbprofile ]; then
    . ${INSTHOME}/dmb/dmbprofile
fi

#-----------------------------------------------------------------------
# The following variables are used for JDBC support
#-----------------------------------------------------------------------
CLASSPATH=${CLASSPATH:-""}

if [ -f ${INST_DIR}/java/db2java.zip ]; then
    AddRemoveString CLASSPATH ${INST_DIR}/java/db2java.zip a
fi
if [ -f ${INST_DIR}/java/db2jcc4.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR}/java/db2jcc4.jar a
fi
if [ -f ${INST_DIR}/java/sqlj4.zip ]; then
    AddRemoveString CLASSPATH ${INST_DIR}/java/sqlj4.zip a
fi
if [ -d ${INST_DIR}/function ]; then
    AddRemoveString CLASSPATH ${INST_DIR}/function a
fi

if [ -f ${INST_DIR}/java/db2jcc_license_cisuz.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR}/java/db2jcc_license_cisuz.jar a
fi

if [ -f ${INST_DIR}/java/db2jcc_license_cu.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR}/java/db2jcc_license_cu.jar a
fi

#-----------------------------------------------------------------------
# The following variables are used for CLPPlus
#-----------------------------------------------------------------------

if [ -f ${INST_DIR?}/tools/clpplus.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR?}/tools/clpplus.jar a
fi

if [ -f ${INST_DIR?}/tools/antlr-3.2.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR?}/tools/antlr-3.2.jar a
fi

if [ -f ${INST_DIR?}/tools/jline-0.9.93.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR?}/tools/jline-0.9.93.jar a
fi

if [ -f ${INST_DIR?}/java/db2jcc4.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR?}/java/db2jcc4.jar a
fi

if [ -f ${INST_DIR?}/java/db2jcc_license_cisuz.jar ]; then
    AddRemoveString CLASSPATH ${INST_DIR?}/java/db2jcc_license_cisuz.jar a
fi

AddRemoveString CLASSPATH . a
export CLASSPATH

LD_LIBRARY_PATH=${LD_LIBRARY_PATH:-""}
AddRemoveString LD_LIBRARY_PATH ${INST_DIR}/lib64 a
AddRemoveString LD_LIBRARY_PATH ${INST_DIR}/lib64/gskit a
AddRemoveString LD_LIBRARY_PATH ${INST_DIR}/lib32 a
export LD_LIBRARY_PATH

#--------------------------------------------------------------------------
# Any user changes to the environment goes into userprofile.  Modifications
# to db2profile may be overwritten in fixpaks.
# userprofile may exist under $INSTHOME/sqllib or $INST_DIR; the former
# takes precedence if it exists.
#--------------------------------------------------------------------------
if [ -f ${INSTHOME?}/sqllib/userprofile ]; then
   . ${INSTHOME?}/sqllib/userprofile
elif [ -f ${INST_DIR}/userprofile ]; then
    . ${INST_DIR}/userprofile
fi

