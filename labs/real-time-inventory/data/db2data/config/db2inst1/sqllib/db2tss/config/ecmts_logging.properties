# ===========================================================================
#  Licensed Materials - Property of IBM
#  "Restricted Materials of IBM"
#
#  (C) Copyright IBM Corp. 2001, 2010.
#
#  US Government Users Restricted Rights - Use, duplication or disclosure
#  restricted by GSA ADP Schedule Contract with IBM Corp.
# ===========================================================================

############################################################
# Which handler to use with the server
############################################################
# Set only a file handler since console is handled by the Launcher
handlers = java.util.logging.FileHandler, com.ibm.es.nuvo.logging.FileHandlerForErrors, com.ibm.es.nuvo.logging.FileHandlerForAudit, com.ibm.es.nuvo.logging.FileHandlerForMonitor
# if you run startup directly from the command line a console handler can be useful
#handlers = java.util.logging.FileHandler, com.ibm.es.nuvo.logging.FileHandlerForErrors, com.ibm.es.nuvo.logging.FileHandlerForAudit, com.ibm.es.nuvo.logging.FileHandlerForMonitor, java.util.logging.ConsoleHandler

############################################################
# Default global logging level.
# This specifies which kinds of events are logged across loggers.
# For any given facility this global level can be overriden by a facility specific level
############################################################
.level = INFO
org.level = SEVERE
############################################################
# Describes specific configuration information for the file handler
############################################################
# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = ./log/trace%g.log
java.util.logging.FileHandler.limit = 10000000
java.util.logging.FileHandler.count = 10
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
java.util.logging.FileHandler.formatter = com.ibm.es.nuvo.logging.XMLLogRecordFormatter
java.util.logging.FileHandler.encoding = utf8
# file handler should print all messages
java.util.logging.FileHandler.level = ALL
java.util.logging.FileHandler.filter = com.ibm.es.nuvo.logging.DefaultFilter

com.ibm.es.nuvo.logging.FileHandlerForErrors.pattern = ./log/default%g.log
com.ibm.es.nuvo.logging.FileHandlerForErrors.limit = 10000000
com.ibm.es.nuvo.logging.FileHandlerForErrors.count = 20
#com.ibm.es.nuvo.logging.FileHandlerForErrors.formatter = java.util.logging.XMLFormatter
com.ibm.es.nuvo.logging.FileHandlerForErrors.formatter = com.ibm.es.nuvo.logging.XMLLogRecordFormatter
com.ibm.es.nuvo.logging.FileHandlerForErrors.encoding = utf8
# file handler for errors should print only error messages
com.ibm.es.nuvo.logging.FileHandlerForErrors.level = INFO
com.ibm.es.nuvo.logging.FileHandlerForErrors.filter = com.ibm.es.nuvo.logging.DefaultFilter

com.ibm.es.nuvo.logging.FileHandlerForAudit.pattern = ./log/admin_audit%g.csv
com.ibm.es.nuvo.logging.FileHandlerForAudit.limit = 10000000
com.ibm.es.nuvo.logging.FileHandlerForAudit.count = 20
com.ibm.es.nuvo.logging.FileHandlerForAudit.formatter = com.ibm.es.nuvo.logging.AuditFormatter
com.ibm.es.nuvo.logging.FileHandlerForAudit.encoding = utf8
com.ibm.es.nuvo.logging.FileHandlerForAudit.level = CONFIG
com.ibm.es.nuvo.logging.FileHandlerForAudit.filter = com.ibm.es.nuvo.logging.AuditFilter

com.ibm.es.nuvo.logging.FileHandlerForMonitor.pattern = ./log/monitor%g.csv
com.ibm.es.nuvo.logging.FileHandlerForMonitor.limit = 10000000
com.ibm.es.nuvo.logging.FileHandlerForMonitor.count = 20
com.ibm.es.nuvo.logging.FileHandlerForMonitor.formatter = com.ibm.es.nuvo.logging.MonitorFormatter
com.ibm.es.nuvo.logging.FileHandlerForMonitor.encoding = utf8
com.ibm.es.nuvo.logging.FileHandlerForMonitor.level = CONFIG
com.ibm.es.nuvo.logging.FileHandlerForMonitor.filter = com.ibm.es.nuvo.logging.MonitorFilter

############################################################
# Describes specific configuration information for the console handler
# Needed only when running Startup directly from the command line
############################################################
# Limit the message that are printed to the console to INFO and above.
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.ConsoleHandler.filter = com.ibm.es.nuvo.logging.DefaultFilter

############################################################
#This is for the lucene logging. 
#It is only relevant if the the server is configured with: 
# <enableIndexerLogging>true</enableIndexerLogging>
#In that case, lucene creates a log for each collection indexed
#and the following two parameters limit those logs.
############################################################
luceneLogging.maxNumberOfLogsPerCollection = 10
luceneLogging.maxSizeOfLogInBytes = 20000000

############################################################
# Packages specific configuration information
############################################################
com.ibm.es.nuvo.level = INFO

#Configuration auditing
com.ibm.ecmts.common.config.api.level = CONFIG

#Monitor auditing
com.ibm.es.nuvo.documentqueue.level = CONFIG

# The following setting effects level of logging from UIMA and LanguageWare packages (they use the FrostWrapperAnnotator logger)
com.ibm.es.nuvo.tokenizer.annotators.FrostWrapperAnnotator.level = INFO

# The following setting effects level of logging from PDFBox
org.apache.pdfbox.util.level = INFO

# some examples to how log levels can be modified
#com.ibm.es.nuvo.search.level = ALL

# To turn on query logging
#com.ibm.es.nuvo.search.SearchableImpl.level = FINE

# To turn on constructor logging
#com.ibm.es.nuvo.indexer.DocumentConstructor.level = FINE
